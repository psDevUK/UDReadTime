{"version":3,"sources":["webpack://udreadtime/webpack/bootstrap","webpack://udreadtime/external \"react\"","webpack://udreadtime/./node_modules/react-hook-reading-time/dist/react-hook-reading-time.es.js","webpack://udreadtime/./components/component.jsx","webpack://udreadtime/./node_modules/universal-dashboard/index.js","webpack://udreadtime/./components/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","react","e","RegExp","replace","time","words","count","formattedText","match","length","characters","otherLanguageTime","text","Math","ceil","minutes","withComponentFeatures","component","post","id","data","Promise","resolve","reject","UniversalDashboard","returnData","subscribeToIncomingEvents","callback","subscribe","event","type","unsubscribeFromIncomingEvents","token","unsubscribe","render","history","obj","toString","isString","version","renderComponent","props","componentState","setComponentState","useState","useEffect","incomingEvent","state","requestId","error","message","sendComponentState","children","concat","elements","hidden","random","substr","additionalProps","setState","newComponentState","publish","notifyOfEvent","eventName","eventId","eventData","keys","forEach","x","endpoint","headers","accept","contentType","postWithHeaders","createElement","Fragment","_ref","_ref2","_ref3","_useReadingTime","useReadingTime","external_react_default","a","style","border","padding","_defineProperty","textAlign","borderRadius","display","displayRead","borderBottom","fontSize","fontStyle","fontWeight","timeToRead","displayWords","register","UDReadTime"],"mappings":"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","file":"index.db250ec46356f9ccc629.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = react;","function t(t,e=275){const{count:n,time:r,formattedText:c}=function(t){const e=new RegExp(\"[぀-ヿ㐀-䶿一-鿿豈-﫿ｦ-ﾟ]\",\"g\"),n=(t.match(e)||[]).length;return{count:n,time:n/500,formattedText:t.replace(e,\"\")}}(t),o=function(t){const e=new RegExp(\"\\\\w+\",\"g\");return(t.match(e)||[]).length}(c);return{characters:n,otherLanguageTime:r,words:o,time:o/e}}function e(t){return t<.5?\"less than a min\":t>=.5&&t<1.5?\"1 min read\":Math.ceil(t)+\" min read\"}function n(t){return t<.5?.5:t>=.5&&t<1.5?1:Math.ceil(t)}function r(r){const c=function(t){const e=new RegExp(\"<\\\\w+(\\\\s+(\\\"[^\\\"]*\\\"|\\\\'[^\\\\']*'|[^>])+)?>|<\\\\/\\\\w+>\",\"gi\");return t.replace(e,\"\")}(function(t){return t.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\")}(r)),{time:o,words:i}=t(c);return{text:e(o),minutes:n(o),words:i,time:o}}export{r as useReadingTime};\n","import React from 'react';\nimport { withComponentFeatures } from 'universal-dashboard';\nimport { useReadingTime } from \"react-hook-reading-time\";\n\nconst UDReadTime = props => {\n  const {\n    text,\n    minutes,\n    words,\n    time,\n  } = useReadingTime(props.text);\n\n  return (\n    <div style={{ border: props.border, padding: props.padding, ['text-align']: props.textAlign, ['border-radius']: props.borderRadius }} key={props.id}>\n      <div style={{ display: props.displayRead, ['border-bottom']: props.borderBottom, ['font-size']: props.fontSize, ['font-style']: props.fontStyle, ['font-weight']: props.fontWeight}}>{minutes}&nbsp;{props.timeToRead}&nbsp;</div>\n      <div style={{ display: props.displayWords, ['border-bottom']: props.borderBottom, ['font-size']: props.fontSize, ['font-style']: props.fontStyle, ['font-weight']: props.fontWeight}}>{words}&nbsp;{props.words}</div>\n      <p></p>\n      {props.text}\n    </div>);\n}\n\nexport default withComponentFeatures(UDReadTime)","export const withComponentFeatures = (component) => {\r\n\r\n    const getComponentData = (id) => {\r\n        return new Promise((resolve, reject) => {\r\n            UniversalDashboard.get(`/api/internal/component/element/${id}`, (data) => {\r\n                if (data.error) reject(data.error.message);\r\n                else resolve(data)\r\n            });\r\n        });\r\n    };\r\n\r\n    const sendComponentState = (requestId, state) => {\r\n        return new Promise((resolve, reject) => {\r\n            UniversalDashboard.post(`/api/internal/component/element/sessionState/${requestId}`, state, (data) => {\r\n                if (data.error) reject(data.error.message);\r\n                else resolve(data)\r\n            });\r\n        });\r\n    }\r\n\r\n    const post = (id, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            UniversalDashboard.post(`/api/internal/component/element/${id}`, data, (returnData) => {\r\n                resolve(returnData)\r\n            });\r\n        });\r\n    }\r\n\r\n    const postWithHeaders = (id, data, headers) => {\r\n        return new Promise((resolve, reject) => {\r\n            UniversalDashboard.postWithHeaders(`/api/internal/component/element/${id}`, data, (returnData) => {\r\n                resolve(returnData)\r\n            }, headers);\r\n        });\r\n    }\r\n\r\n    const subscribeToIncomingEvents = (id, callback) => {\r\n        const incomingEvent = (id, event) => {\r\n\r\n            let type = event.type;\r\n            if (type === \"requestState\")\r\n            {\r\n                type = \"getState\"\r\n            }\r\n\r\n            callback(type, event);\r\n        }\r\n\r\n        return UniversalDashboard.subscribe(id, incomingEvent);\r\n    }\r\n\r\n    const unsubscribeFromIncomingEvents = (token) => {\r\n        UniversalDashboard.unsubscribe(token)\r\n    }\r\n\r\n    function isString (obj) {\r\n        return (Object.prototype.toString.call(obj) === '[object String]');\r\n    }    \r\n\r\n    const render = (component, history) => {\r\n        if (!isString(component))\r\n        {\r\n            // set props version\r\n            if (!component.version)\r\n            {\r\n                component.version = \"0\";    \r\n            }\r\n                \r\n            if (!history && component.history) {\r\n                history = component.history;\r\n            }\r\n        }\r\n\r\n        return UniversalDashboard.renderComponent(component, history);\r\n    }\r\n\r\n    const highOrderComponent = (props) => {\r\n        const [componentState, setComponentState] = react.useState(props);\r\n        react.useEffect(() => {\r\n            setComponentState(props);\r\n        }, [props.version])\r\n\r\n        const notifyOfEvent = (eventName, value) => {\r\n            UniversalDashboard.publish('element-event', {\r\n                type: \"clientEvent\",\r\n                eventId: props.id + eventName,\r\n                eventName: eventName,\r\n                eventData: value\r\n            });\r\n        }\r\n    \r\n        const incomingEvent = (type, event) => {\r\n            if (type === \"setState\")\r\n                setComponentState({\r\n                    ...componentState,\r\n                    ...event.state\r\n                });\r\n    \r\n            if (type === \"getState\") {\r\n                sendComponentState(event.requestId, componentState);\r\n            }\r\n                \r\n    \r\n            if (type === \"addElement\")\r\n            {\r\n                let children = componentState.children;\r\n                if (children == null)\r\n                {\r\n                    children = []\r\n                }\r\n    \r\n                children = children.concat(event.elements);\r\n    \r\n                setComponentState({...componentState, children});\r\n            }\r\n    \r\n            if (type === \"clearElement\")\r\n            {\r\n                setComponentState({...componentState, children: []});\r\n            }\r\n    \r\n            if (type === \"removeElement\")\r\n            {\r\n                // This isn't great\r\n                setComponentState({...componentState, hidden: true});\r\n            }\r\n    \r\n            if (type === \"syncElement\") \r\n            {\r\n                setComponentState({...componentState, version: Math.random().toString(36).substr(2, 5) })\r\n            }\r\n        }\r\n\r\n        react.useEffect(() => {\r\n            const token = subscribeToIncomingEvents(props.id, incomingEvent)\r\n            return () => {\r\n                unsubscribeFromIncomingEvents(token)\r\n            }\r\n        });\r\n        \r\n        // useEffect(() => {\r\n        //     return () => {\r\n        //         UniversalDashboard.publish('element-event', {\r\n        //             type: \"unregisterEvent\",\r\n        //             eventId: props.id\r\n        //         });\r\n\r\n        //         Object.keys(componentState).forEach(x => {\r\n        //             if (componentState[x] != null && componentState[x].endpoint)\r\n        //             {\r\n        //                 UniversalDashboard.publish('element-event', {\r\n        //                     type: \"unregisterEvent\",\r\n        //                     eventId: componentState[x].name\r\n        //                 });\r\n        //             }\r\n        //         });\r\n        //     }\r\n        // }, true)\r\n\r\n        const additionalProps = {\r\n            render,\r\n            setState: (state) => {\r\n                let newComponentState = {\r\n                    ...componentState,\r\n                    ...state\r\n                }\r\n                setComponentState(newComponentState);\r\n            },\r\n            publish: UniversalDashboard.publish,\r\n            notifyOfEvent,\r\n            post,\r\n            subscribeToIncomingEvents,\r\n            unsubscribeFromIncomingEvents\r\n        }\r\n\r\n        Object.keys(componentState).forEach(x => {\r\n            if (componentState[x] != null && componentState[x].endpoint)\r\n            {\r\n                additionalProps[x] = (data) => {\r\n\r\n                    let headers = {}\r\n                    if (componentState[x].accept && componentState[x].accept !== '') {\r\n                        headers['Accept'] = componentState[x].accept;\r\n                    } \r\n\r\n                    if (componentState[x].contentType && componentState[x].contentType !== '') {\r\n                        headers['Content-Type'] = componentState[x].contentType;\r\n                    } \r\n\r\n                    return postWithHeaders(componentState[x].name, data, headers);\r\n                }\r\n            }\r\n        })\r\n        \r\n        if (componentState.hidden) {\r\n            return react.createElement(react.Fragment);\r\n        }\r\n\r\n        return component({...componentState, ...additionalProps})\r\n    }\r\n\r\n    return highOrderComponent;\r\n}\r\n\r\nexport const registerComponent = (id, component) => {\r\n    UniversalDashboard.register(id, component);\r\n}\r\n","\nimport UDReadTime from './component';\nUniversalDashboard.register(\"udreadtime\", UDReadTime);"],"sourceRoot":""}